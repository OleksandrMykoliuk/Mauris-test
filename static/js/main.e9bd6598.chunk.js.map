{"version":3,"sources":["components/Calendar/CalendarAuxiliary.js","components/Calendar/Calendar.js","components/Movie/Movie.js","components/MoviesList/MoviesList.js","api.js","App.js","index.js"],"names":["DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","getMonthData","year","month","result","date","Date","daysInMonth","getMonth","getFullYear","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","Calendar","onChange","useState","setDate","monthData","calendar","className","type","onClick","newDate","map","name","week","currentDate","handleDayClick","getDate","uuidv4","Movie","movie","src","image","medium","alt","show","premiered","slice","season","number","id","MoviesList","list","setList","useEffect","String","length","fetch","then","res","ok","json","Error","filter","fetchList","toLocaleDateString","color","height","width","timeout","App","handleDateChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9bd6598.chunk.js","sourcesContent":["/* eslint-disable no-plusplus */\nconst DAYS_IN_WEEK = 7;\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nconst WEEK_DAYS_FROM_MONDAY = [6, 0, 1, 2, 3, 4, 5];\n\nconst Month = {\n  January: 0,\n  February: 1,\n  March: 2,\n  April: 3,\n  May: 4,\n  June: 5,\n  July: 6,\n  August: 7,\n  September: 8,\n  October: 9,\n  Novermber: 10,\n  December: 11,\n};\n\nexport function isLeapYear(year) {\n  return !((year % 4) || (!(year % 100) && (year % 400)));\n}\n\nexport function getDaysInMonth(date) {\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const daysInMonth = DAYS_IN_MONTH[month];\n\n  if (isLeapYear(year) && month === Month.February) {\n    return daysInMonth + 1;\n  }\n\n  return daysInMonth;\n}\n\nexport function getDayOfWeek(date) {\n  const dayOfWeek = date.getDay();\n\n  return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\n}\n\nexport function getMonthData(year, month) {\n  const result = [];\n  const date = new Date(year, month);\n  const daysInMonth = getDaysInMonth(date);\n  const monthStartsOn = getDayOfWeek(date);\n  let day = 1;\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = [];\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined;\n      } else {\n        result[i][j] = new Date(year, month, day++);\n      }\n    }\n  }\n\n  return result;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as calendar from './CalendarAuxiliary';\n\nimport './Calendar.scss';\n\nexport const Calendar = ({ onChange }) => {\n  const [date, setDate] = useState(new Date());\n\n  const handlePrevMonthButtonClick = () => {\n    const newDate = new Date(date.getFullYear(), date.getMonth() - 1);\n\n    setDate(newDate);\n  };\n\n  const handleNextMonthButtonClick = () => {\n    const newDate = new Date(date.getFullYear(), date.getMonth() + 1);\n\n    setDate(newDate);\n  };\n\n  const handleDayClick = (currentDate) => {\n    onChange(currentDate);\n  };\n\n  const monthNames = [\n    'Январь',\n    'Февраль',\n    'Март',\n    'Апрель',\n    'Май',\n    'Июнь',\n    'Июль',\n    'Август',\n    'Сентябрь',\n    'Октябрь',\n    'Ноябрь',\n    'Декабрь',\n  ];\n\n  const weekDayNames = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'];\n\n  const monthData = calendar.getMonthData(date.getFullYear(), date.getMonth());\n\n  return (\n    <div className=\"Сalendar\">\n      <div className=\"Calendar__header\">\n        <button\n          type=\"button\"\n          onClick={handlePrevMonthButtonClick}\n          className=\"Calendar__button\"\n        >\n          {'<'}\n        </button>\n\n        <span className=\"Calendar__title\">\n          {`${monthNames[date.getMonth()]} ${date.getFullYear()}`}\n        </span>\n\n        <button\n          type=\"button\"\n          onClick={handleNextMonthButtonClick}\n          className=\"Calendar__button\"\n        >\n          {'>'}\n        </button>\n      </div>\n\n      <table className=\"Calendar__table\">\n        <thead>\n          <tr>\n            {weekDayNames.map(name => (\n              <th key={name} className=\"Calendar__th\">\n                {name}\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {monthData.map(week => (\n            <tr key={uuidv4()}>\n              {week.map(currentDate => (currentDate\n                ? (\n                  <td\n                    key={uuidv4()}\n                    className=\"Calendar__day\"\n                    onClick={() => handleDayClick(currentDate)}\n                  >\n                    {currentDate.getDate()}\n                  </td>\n                )\n                : <td key={uuidv4()} />))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nCalendar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.scss';\n\nexport const Movie = ({ movie }) => (\n  <div\n    key={movie.id}\n    className=\"Movie\"\n  >\n    <div className=\"Movie__image-container\">\n      <img\n        src={movie.image.medium}\n        alt={movie.name}\n        className=\"Movie__image\"\n      />\n    </div>\n    <div className=\"Movie__description\">\n      <p className=\"Movie__name\">\n        {movie.name}\n      </p>\n      <p className=\"Movie__year\">\n        {movie.show.premiered.slice(0, 4)}\n      </p>\n      <span className=\"Movie__season\">\n        {`Сезон : ${movie.season}, серия : ${movie.number}`}\n      </span>\n    </div>\n  </div>\n);\n\nMovie.propTypes = {\n  movie: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './MoviesList.scss';\nimport Loader from 'react-loader-spinner';\nimport { fetchList } from '../../api';\nimport { Movie } from '../Movie/Movie';\n\nexport const MoviesList = ({ date }) => {\n  const [list, setList] = useState(null);\n\n  useEffect(() => {\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    if (String(month).length === 1) {\n      const newMonth = `0${month}`;\n\n      month = newMonth;\n    }\n\n    if (String(day).length === 1) {\n      const newDay = `0${day}`;\n\n      day = newDay;\n    }\n\n    const urlDate = `${year}-${month}-${day}`;\n\n    fetchList(urlDate).then((json) => {\n      setList(json);\n    });\n  }, []);\n\n  return list ? (\n    <>\n      <div className=\"MoviesList\">\n        <span className=\"MoviesList__date\">\n          {date.toLocaleDateString()}\n        </span>\n        <hr />\n        {list.map(movie => (\n          <Movie movie={movie} />\n        ))}\n      </div>\n    </>\n  )\n    : (\n      <div className=\"MoviesList__loader\">\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      </div>\n    );\n};\n\nMoviesList.propTypes = {\n  date: PropTypes.string.isRequired,\n};\n","const BASE_URL = 'https://api.tvmaze.com/schedule?country=US&date=';\n\nexport const fetchList = date => fetch(`${BASE_URL}${date}`)\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error(`Can't get info from server`);\n    } else {\n      return res.json();\n    }\n  })\n  .then(json => json.filter(movie => movie.id\n    && movie.image\n    && movie.show.premiered\n    && movie.season\n    && movie.number));\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Calendar } from './components/Calendar/Calendar';\nimport { MoviesList } from './components/MoviesList/MoviesList';\n\nconst App = () => {\n  const [date, setDate] = useState(null);\n\n  const handleDateChange = newDate => setDate(newDate);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__header\">\n        {date && (\n          <button\n            type=\"button\"\n            onClick={() => handleDateChange(null)}\n            className=\"App__button\"\n          >\n            {'<'}\n          </button>\n        )}\n        <p className=\"App__title\">\n          SUPER FILM\n        </p>\n      </div>\n      {!date && (\n        <>\n          <div className=\"App__description\">\n            <img\n              src=\"tv.png\"\n              alt=\"background tv\"\n              className=\"App__image\"\n            />\n          </div>\n          <p className=\"App__text\">\n            Для получения списка сериалов, пожалуйста,\n            выберите необходимый месяц и день.\n          </p>\n          <Calendar\n            onChange={handleDateChange}\n          />\n        </>\n      )}\n      {date && (\n        <MoviesList\n          date={date}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}